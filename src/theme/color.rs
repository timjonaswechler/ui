use bevy::prelude::*;
use bevy::reflect::Reflect;
use serde::{Deserialize, Serialize};

#[derive(Serialize, Deserialize, Debug, Clone, Reflect)]
pub struct UiColorPalettesData {
    pub white: UiColorPaletteData,
    pub black: UiColorPaletteData,
    pub gray: UiColorPaletteData,
    pub gray_a: UiColorPaletteData,
    pub mauve: UiColorPaletteData,
    pub mauve_a: UiColorPaletteData,
    pub slate: UiColorPaletteData,
    pub slate_a: UiColorPaletteData,
    pub sage: UiColorPaletteData,
    pub sage_a: UiColorPaletteData,
    pub olive: UiColorPaletteData,
    pub olive_a: UiColorPaletteData,
    pub sand: UiColorPaletteData,
    pub sand_a: UiColorPaletteData,
    pub tomato: UiColorPaletteData,
    pub tomato_a: UiColorPaletteData,
    pub red: UiColorPaletteData,
    pub red_a: UiColorPaletteData,
    pub ruby: UiColorPaletteData,
    pub ruby_a: UiColorPaletteData,
    pub crimson: UiColorPaletteData,
    pub crimson_a: UiColorPaletteData,
    pub pink: UiColorPaletteData,
    pub pink_a: UiColorPaletteData,
    pub plum: UiColorPaletteData,
    pub plum_a: UiColorPaletteData,
    pub purple: UiColorPaletteData,
    pub purple_a: UiColorPaletteData,
    pub violet: UiColorPaletteData,
    pub violet_a: UiColorPaletteData,
    pub iris: UiColorPaletteData,
    pub iris_a: UiColorPaletteData,
    pub indigo: UiColorPaletteData,
    pub indigo_a: UiColorPaletteData,
    pub blue: UiColorPaletteData,
    pub blue_a: UiColorPaletteData,
    pub cyan: UiColorPaletteData,
    pub cyan_a: UiColorPaletteData,
    pub teal: UiColorPaletteData,
    pub teal_a: UiColorPaletteData,
    pub jade: UiColorPaletteData,
    pub jade_a: UiColorPaletteData,
    pub green: UiColorPaletteData,
    pub green_a: UiColorPaletteData,
    pub grass: UiColorPaletteData,
    pub grass_a: UiColorPaletteData,
    pub bronze: UiColorPaletteData,
    pub bronze_a: UiColorPaletteData,
    pub gold: UiColorPaletteData,
    pub gold_a: UiColorPaletteData,
    pub brown: UiColorPaletteData,
    pub brown_a: UiColorPaletteData,
    pub orange: UiColorPaletteData,
    pub orange_a: UiColorPaletteData,
    pub amber: UiColorPaletteData,
    pub amber_a: UiColorPaletteData,
    pub yellow: UiColorPaletteData,
    pub yellow_a: UiColorPaletteData,
    pub lime: UiColorPaletteData,
    pub lime_a: UiColorPaletteData,
    pub mint: UiColorPaletteData,
    pub mint_a: UiColorPaletteData,
    pub sky: UiColorPaletteData,
    pub sky_a: UiColorPaletteData,
}

#[derive(Serialize, Deserialize, Debug, Clone, Reflect)]
pub struct UiColorPaletteData {
    pub step01: [f32; 4],
    pub step02: [f32; 4],
    pub step03: [f32; 4],
    pub step04: [f32; 4],
    pub step05: [f32; 4],
    pub step06: [f32; 4],
    pub step07: [f32; 4],
    pub step08: [f32; 4],
    pub step09: [f32; 4],
    pub step10: [f32; 4],
    pub step11: [f32; 4],
    pub step12: [f32; 4],
}

#[derive(Debug, Clone, Copy, PartialEq)]
pub struct ColorScale {
    pub step_1: Color,
    pub step_2: Color,
    pub step_3: Color,
    pub step_4: Color,
    pub step_5: Color,
    pub step_6: Color,
    pub step_7: Color,
    pub step_8: Color,
    pub step_9: Color,
    pub step_10: Color,
    pub step_11: Color,
    pub step_12: Color,
    pub surface: Color,
    pub indicator: Color,
    pub track: Color,
    pub contrast: Color,
}

impl Default for UiColorPaletteData {
    fn default() -> Self {
        UiColorPaletteData {
            step01: [1.0, 1.0, 1.0, 0.05],
            step02: [1.0, 1.0, 1.0, 0.10],
            step03: [1.0, 1.0, 1.0, 0.15],
            step04: [1.0, 1.0, 1.0, 0.20],
            step05: [1.0, 1.0, 1.0, 0.30],
            step06: [1.0, 1.0, 1.0, 0.40],
            step07: [1.0, 1.0, 1.0, 0.50],
            step08: [1.0, 1.0, 1.0, 0.60],
            step09: [1.0, 1.0, 1.0, 0.70],
            step10: [1.0, 1.0, 1.0, 0.80],
            step11: [1.0, 1.0, 1.0, 0.90],
            step12: [1.0, 1.0, 1.0, 0.95],
        }
    }
}

impl UiColorPaletteData {
    pub fn to_color_scale(&self) -> ColorScale {
        ColorScale {
            step_1: Color::srgba(self.step01[0], self.step01[1], self.step01[2], self.step01[3]),
            step_2: Color::srgba(self.step02[0], self.step02[1], self.step02[2], self.step02[3]),
            step_3: Color::srgba(self.step03[0], self.step03[1], self.step03[2], self.step03[3]),
            step_4: Color::srgba(self.step04[0], self.step04[1], self.step04[2], self.step04[3]),
            step_5: Color::srgba(self.step05[0], self.step05[1], self.step05[2], self.step05[3]),
            step_6: Color::srgba(self.step06[0], self.step06[1], self.step06[2], self.step06[3]),
            step_7: Color::srgba(self.step07[0], self.step07[1], self.step07[2], self.step07[3]),
            step_8: Color::srgba(self.step08[0], self.step08[1], self.step08[2], self.step08[3]),
            step_9: Color::srgba(self.step09[0], self.step09[1], self.step09[2], self.step09[3]),
            step_10: Color::srgba(self.step10[0], self.step10[1], self.step10[2], self.step10[3]),
            step_11: Color::srgba(self.step11[0], self.step11[1], self.step11[2], self.step11[3]),
            step_12: Color::srgba(self.step12[0], self.step12[1], self.step12[2], self.step12[3]),
            surface: Color::srgba(self.step02[0], self.step02[1], self.step02[2], self.step02[3]),
            indicator: Color::srgba(self.step09[0], self.step09[1], self.step09[2], self.step09[3]),
            track: Color::srgba(self.step03[0], self.step03[1], self.step03[2], self.step03[3]),
            contrast: Color::srgba(self.step12[0], self.step12[1], self.step12[2], self.step12[3]),
        }
    }
}

impl ColorScale {
    pub fn backgrounds(&self) -> [Color; 2] {
        [self.step_1, self.step_2]
    }
    
    pub fn interactive_components(&self) -> [Color; 3] {
        [self.step_3, self.step_4, self.step_5]
    }
    
    pub fn borders_and_separators(&self) -> [Color; 3] {
        [self.step_6, self.step_7, self.step_8]
    }
    
    pub fn solid_colors(&self) -> [Color; 2] {
        [self.step_9, self.step_10]
    }
    
    pub fn accessible_text(&self) -> [Color; 2] {
        [self.step_11, self.step_12]
    }
}

impl UiColorPalettesData {
    pub fn default_light() -> Self {
        UiColorPalettesData {
            white: UiColorPaletteData {
                step01: [1.0, 1.0, 1.0, 0.05],
                step02: [1.0, 1.0, 1.0, 0.10],
                step03: [1.0, 1.0, 1.0, 0.15],
                step04: [1.0, 1.0, 1.0, 0.20],
                step05: [1.0, 1.0, 1.0, 0.30],
                step06: [1.0, 1.0, 1.0, 0.40],
                step07: [1.0, 1.0, 1.0, 0.50],
                step08: [1.0, 1.0, 1.0, 0.60],
                step09: [1.0, 1.0, 1.0, 0.70],
                step10: [1.0, 1.0, 1.0, 0.80],
                step11: [1.0, 1.0, 1.0, 0.90],
                step12: [1.0, 1.0, 1.0, 0.95],
            },
            black: UiColorPaletteData {
                step01: [0.0, 0.0, 0.0, 0.05],
                step02: [0.0, 0.0, 0.0, 0.10],
                step03: [0.0, 0.0, 0.0, 0.15],
                step04: [0.0, 0.0, 0.0, 0.20],
                step05: [0.0, 0.0, 0.0, 0.30],
                step06: [0.0, 0.0, 0.0, 0.40],
                step07: [0.0, 0.0, 0.0, 0.50],
                step08: [0.0, 0.0, 0.0, 0.60],
                step09: [0.0, 0.0, 0.0, 0.70],
                step10: [0.0, 0.0, 0.0, 0.80],
                step11: [0.0, 0.0, 0.0, 0.90],
                step12: [0.0, 0.0, 0.0, 0.95],
            },
            gray: UiColorPaletteData {
                step01: [0.988, 0.988, 0.988, 1.0],
                step02: [0.976, 0.976, 0.976, 1.0],
                step03: [0.941, 0.941, 0.941, 1.0],
                step04: [0.910, 0.910, 0.910, 1.0],
                step05: [0.878, 0.878, 0.878, 1.0],
                step06: [0.851, 0.851, 0.851, 1.0],
                step07: [0.808, 0.808, 0.808, 1.0],
                step08: [0.733, 0.733, 0.733, 1.0],
                step09: [0.553, 0.553, 0.553, 1.0],
                step10: [0.514, 0.514, 0.514, 1.0],
                step11: [0.392, 0.392, 0.392, 1.0],
                step12: [0.125, 0.125, 0.125, 1.0],
            },
            gray_a: UiColorPaletteData::default(),
            mauve: UiColorPaletteData::default(),
            mauve_a: UiColorPaletteData::default(),
            slate: UiColorPaletteData::default(),
            slate_a: UiColorPaletteData::default(),
            sage: UiColorPaletteData::default(),
            sage_a: UiColorPaletteData::default(),
            olive: UiColorPaletteData::default(),
            olive_a: UiColorPaletteData::default(),
            sand: UiColorPaletteData::default(),
            sand_a: UiColorPaletteData::default(),
            tomato: UiColorPaletteData::default(),
            tomato_a: UiColorPaletteData::default(),
            red: UiColorPaletteData::default(),
            red_a: UiColorPaletteData::default(),
            ruby: UiColorPaletteData::default(),
            ruby_a: UiColorPaletteData::default(),
            crimson: UiColorPaletteData::default(),
            crimson_a: UiColorPaletteData::default(),
            pink: UiColorPaletteData::default(),
            pink_a: UiColorPaletteData::default(),
            plum: UiColorPaletteData::default(),
            plum_a: UiColorPaletteData::default(),
            purple: UiColorPaletteData::default(),
            purple_a: UiColorPaletteData::default(),
            violet: UiColorPaletteData::default(),
            violet_a: UiColorPaletteData::default(),
            iris: UiColorPaletteData::default(),
            iris_a: UiColorPaletteData::default(),
            indigo: UiColorPaletteData {
                step01: [0.988, 0.988, 0.996, 1.0],
                step02: [0.965, 0.976, 1.0, 1.0],
                step03: [0.929, 0.949, 0.996, 1.0],
                step04: [0.882, 0.918, 1.0, 1.0],
                step05: [0.824, 0.871, 1.0, 1.0],
                step06: [0.757, 0.816, 1.0, 1.0],
                step07: [0.671, 0.741, 0.976, 1.0],
                step08: [0.553, 0.643, 0.937, 1.0],
                step09: [0.243, 0.388, 0.867, 1.0],
                step10: [0.200, 0.345, 0.831, 1.0],
                step11: [0.227, 0.357, 0.780, 1.0],
                step12: [0.122, 0.176, 0.361, 1.0],
            },
            indigo_a: UiColorPaletteData::default(),
            blue: UiColorPaletteData {
                step01: [0.984, 0.992, 1.0, 1.0],
                step02: [0.957, 0.980, 1.0, 1.0],
                step03: [0.902, 0.957, 0.996, 1.0],
                step04: [0.835, 0.937, 1.0, 1.0],
                step05: [0.761, 0.898, 1.0, 1.0],
                step06: [0.675, 0.847, 0.988, 1.0],
                step07: [0.557, 0.784, 0.965, 1.0],
                step08: [0.369, 0.694, 0.937, 1.0],
                step09: [0.0, 0.565, 1.0, 1.0],
                step10: [0.020, 0.533, 0.941, 1.0],
                step11: [0.051, 0.455, 0.808, 1.0],
                step12: [0.067, 0.196, 0.392, 1.0],
            },
            blue_a: UiColorPaletteData::default(),
            cyan: UiColorPaletteData::default(),
            cyan_a: UiColorPaletteData::default(),
            teal: UiColorPaletteData::default(),
            teal_a: UiColorPaletteData::default(),
            jade: UiColorPaletteData::default(),
            jade_a: UiColorPaletteData::default(),
            green: UiColorPaletteData {
                step01: [0.984, 0.996, 0.988, 1.0],
                step02: [0.957, 0.984, 0.965, 1.0],
                step03: [0.902, 0.965, 0.922, 1.0],
                step04: [0.855, 0.945, 0.875, 1.0],
                step05: [0.769, 0.910, 0.816, 1.0],
                step06: [0.678, 0.863, 0.753, 1.0],
                step07: [0.557, 0.808, 0.667, 1.0],
                step08: [0.357, 0.725, 0.541, 1.0],
                step09: [0.188, 0.643, 0.424, 1.0],
                step10: [0.169, 0.604, 0.400, 1.0],
                step11: [0.129, 0.514, 0.349, 1.0],
                step12: [0.098, 0.235, 0.176, 1.0],
            },
            green_a: UiColorPaletteData::default(),
            grass: UiColorPaletteData::default(),
            grass_a: UiColorPaletteData::default(),
            bronze: UiColorPaletteData::default(),
            bronze_a: UiColorPaletteData::default(),
            gold: UiColorPaletteData::default(),
            gold_a: UiColorPaletteData::default(),
            brown: UiColorPaletteData::default(),
            brown_a: UiColorPaletteData::default(),
            orange: UiColorPaletteData::default(),
            orange_a: UiColorPaletteData::default(),
            amber: UiColorPaletteData::default(),
            amber_a: UiColorPaletteData::default(),
            yellow: UiColorPaletteData::default(),
            yellow_a: UiColorPaletteData::default(),
            lime: UiColorPaletteData::default(),
            lime_a: UiColorPaletteData::default(),
            mint: UiColorPaletteData::default(),
            mint_a: UiColorPaletteData::default(),
            sky: UiColorPaletteData::default(),
            sky_a: UiColorPaletteData::default(),
        }
    }

    pub fn default_dark() -> Self {
        UiColorPalettesData {
            white: UiColorPaletteData {
                step01: [1.0, 1.0, 1.0, 0.05],
                step02: [1.0, 1.0, 1.0, 0.10],
                step03: [1.0, 1.0, 1.0, 0.15],
                step04: [1.0, 1.0, 1.0, 0.20],
                step05: [1.0, 1.0, 1.0, 0.30],
                step06: [1.0, 1.0, 1.0, 0.40],
                step07: [1.0, 1.0, 1.0, 0.50],
                step08: [1.0, 1.0, 1.0, 0.60],
                step09: [1.0, 1.0, 1.0, 0.70],
                step10: [1.0, 1.0, 1.0, 0.80],
                step11: [1.0, 1.0, 1.0, 0.90],
                step12: [1.0, 1.0, 1.0, 0.95],
            },
            black: UiColorPaletteData {
                step01: [0.0, 0.0, 0.0, 0.05],
                step02: [0.0, 0.0, 0.0, 0.10],
                step03: [0.0, 0.0, 0.0, 0.15],
                step04: [0.0, 0.0, 0.0, 0.20],
                step05: [0.0, 0.0, 0.0, 0.30],
                step06: [0.0, 0.0, 0.0, 0.40],
                step07: [0.0, 0.0, 0.0, 0.50],
                step08: [0.0, 0.0, 0.0, 0.60],
                step09: [0.0, 0.0, 0.0, 0.70],
                step10: [0.0, 0.0, 0.0, 0.80],
                step11: [0.0, 0.0, 0.0, 0.90],
                step12: [0.0, 0.0, 0.0, 0.95],
            },
            gray: UiColorPaletteData {
                step01: [0.067, 0.067, 0.067, 1.0],
                step02: [0.098, 0.098, 0.098, 1.0],
                step03: [0.133, 0.133, 0.133, 1.0],
                step04: [0.165, 0.165, 0.165, 1.0],
                step05: [0.192, 0.192, 0.192, 1.0],
                step06: [0.227, 0.227, 0.227, 1.0],
                step07: [0.282, 0.282, 0.282, 1.0],
                step08: [0.376, 0.376, 0.376, 1.0],
                step09: [0.431, 0.431, 0.431, 1.0],
                step10: [0.482, 0.482, 0.482, 1.0],
                step11: [0.706, 0.706, 0.706, 1.0],
                step12: [0.933, 0.933, 0.933, 1.0],
            },
            gray_a: UiColorPaletteData::default(),
            mauve: UiColorPaletteData::default(),
            mauve_a: UiColorPaletteData::default(),
            slate: UiColorPaletteData::default(),
            slate_a: UiColorPaletteData::default(),
            sage: UiColorPaletteData::default(),
            sage_a: UiColorPaletteData::default(),
            olive: UiColorPaletteData::default(),
            olive_a: UiColorPaletteData::default(),
            sand: UiColorPaletteData::default(),
            sand_a: UiColorPaletteData::default(),
            tomato: UiColorPaletteData::default(),
            tomato_a: UiColorPaletteData::default(),
            red: UiColorPaletteData::default(),
            red_a: UiColorPaletteData::default(),
            ruby: UiColorPaletteData::default(),
            ruby_a: UiColorPaletteData::default(),
            crimson: UiColorPaletteData::default(),
            crimson_a: UiColorPaletteData::default(),
            pink: UiColorPaletteData::default(),
            pink_a: UiColorPaletteData::default(),
            plum: UiColorPaletteData::default(),
            plum_a: UiColorPaletteData::default(),
            purple: UiColorPaletteData::default(),
            purple_a: UiColorPaletteData::default(),
            violet: UiColorPaletteData::default(),
            violet_a: UiColorPaletteData::default(),
            iris: UiColorPaletteData::default(),
            iris_a: UiColorPaletteData::default(),
            indigo: UiColorPaletteData {
                step01: [0.067, 0.075, 0.122, 1.0],
                step02: [0.078, 0.090, 0.149, 1.0],
                step03: [0.094, 0.141, 0.286, 1.0],
                step04: [0.114, 0.180, 0.384, 1.0],
                step05: [0.149, 0.227, 0.455, 1.0],
                step06: [0.188, 0.263, 0.518, 1.0],
                step07: [0.227, 0.310, 0.588, 1.0],
                step08: [0.263, 0.361, 0.694, 1.0],
                step09: [0.431, 0.549, 0.835, 1.0],
                step10: [0.510, 0.612, 0.871, 1.0],
                step11: [0.620, 0.663, 1.0, 1.0],
                step12: [0.847, 0.878, 0.996, 1.0],
            },
            indigo_a: UiColorPaletteData::default(),
            blue: UiColorPaletteData {
                step01: [0.051, 0.082, 0.125, 1.0],
                step02: [0.067, 0.098, 0.153, 1.0],
                step03: [0.051, 0.157, 0.278, 1.0],
                step04: [0.0, 0.200, 0.384, 1.0],
                step05: [0.0, 0.251, 0.455, 1.0],
                step06: [0.063, 0.302, 0.529, 1.0],
                step07: [0.125, 0.365, 0.620, 1.0],
                step08: [0.157, 0.439, 0.741, 1.0],
                step09: [0.0, 0.565, 1.0, 1.0],
                step10: [0.231, 0.620, 1.0, 1.0],
                step11: [0.439, 0.722, 1.0, 1.0],
                step12: [0.761, 0.902, 1.0, 1.0],
            },
            blue_a: UiColorPaletteData::default(),
            cyan: UiColorPaletteData::default(),
            cyan_a: UiColorPaletteData::default(),
            teal: UiColorPaletteData::default(),
            teal_a: UiColorPaletteData::default(),
            jade: UiColorPaletteData::default(),
            jade_a: UiColorPaletteData::default(),
            green: UiColorPaletteData {
                step01: [0.055, 0.082, 0.071, 1.0],
                step02: [0.071, 0.106, 0.090, 1.0],
                step03: [0.075, 0.180, 0.129, 1.0],
                step04: [0.067, 0.231, 0.169, 1.0],
                step05: [0.090, 0.282, 0.216, 1.0],
                step06: [0.125, 0.341, 0.267, 1.0],
                step07: [0.157, 0.408, 0.290, 1.0],
                step08: [0.184, 0.486, 0.341, 1.0],
                step09: [0.188, 0.643, 0.424, 1.0],
                step10: [0.204, 0.690, 0.459, 1.0],
                step11: [0.239, 0.847, 0.549, 1.0],
                step12: [0.694, 0.945, 0.796, 1.0],
            },
            green_a: UiColorPaletteData::default(),
            grass: UiColorPaletteData::default(),
            grass_a: UiColorPaletteData::default(),
            bronze: UiColorPaletteData::default(),
            bronze_a: UiColorPaletteData::default(),
            gold: UiColorPaletteData::default(),
            gold_a: UiColorPaletteData::default(),
            brown: UiColorPaletteData::default(),
            brown_a: UiColorPaletteData::default(),
            orange: UiColorPaletteData::default(),
            orange_a: UiColorPaletteData::default(),
            amber: UiColorPaletteData::default(),
            amber_a: UiColorPaletteData::default(),
            yellow: UiColorPaletteData::default(),
            yellow_a: UiColorPaletteData::default(),
            lime: UiColorPaletteData::default(),
            lime_a: UiColorPaletteData::default(),
            mint: UiColorPaletteData::default(),
            mint_a: UiColorPaletteData::default(),
            sky: UiColorPaletteData::default(),
            sky_a: UiColorPaletteData::default(),
        }
    }

    pub fn get_color_palette(&self, color: &str) -> &UiColorPaletteData {
        match color {
            "white" => &self.white,
            "black" => &self.black,
            "gray" => &self.gray,
            "gray_a" => &self.gray_a,
            "mauve" => &self.mauve,
            "mauve_a" => &self.mauve_a,
            "slate" => &self.slate,
            "slate_a" => &self.slate_a,
            "sage" => &self.sage,
            "sage_a" => &self.sage_a,
            "olive" => &self.olive,
            "olive_a" => &self.olive_a,
            "sand" => &self.sand,
            "sand_a" => &self.sand_a,
            "tomato" => &self.tomato,
            "tomato_a" => &self.tomato_a,
            "red" => &self.red,
            "red_a" => &self.red_a,
            "ruby" => &self.ruby,
            "ruby_a" => &self.ruby_a,
            "crimson" => &self.crimson,
            "crimson_a" => &self.crimson_a,
            "pink" => &self.pink,
            "pink_a" => &self.pink_a,
            "plum" => &self.plum,
            "plum_a" => &self.plum_a,
            "purple" => &self.purple,
            "purple_a" => &self.purple_a,
            "violet" => &self.violet,
            "violet_a" => &self.violet_a,
            "iris" => &self.iris,
            "iris_a" => &self.iris_a,
            "indigo" => &self.indigo,
            "indigo_a" => &self.indigo_a,
            "blue" => &self.blue,
            "blue_a" => &self.blue_a,
            "cyan" => &self.cyan,
            "cyan_a" => &self.cyan_a,
            "teal" => &self.teal,
            "teal_a" => &self.teal_a,
            "jade" => &self.jade,
            "jade_a" => &self.jade_a,
            "green" => &self.green,
            "green_a" => &self.green_a,
            "grass" => &self.grass,
            "grass_a" => &self.grass_a,
            "bronze" => &self.bronze,
            "bronze_a" => &self.bronze_a,
            "gold" => &self.gold,
            "gold_a" => &self.gold_a,
            "brown" => &self.brown,
            "brown_a" => &self.brown_a,
            "orange" => &self.orange,
            "orange_a" => &self.orange_a,
            "amber" => &self.amber,
            "amber_a" => &self.amber_a,
            "yellow" => &self.yellow,
            "yellow_a" => &self.yellow_a,
            "lime" => &self.lime,
            "lime_a" => &self.lime_a,
            "mint" => &self.mint,
            "mint_a" => &self.mint_a,
            "sky" => &self.sky,
            "sky_a" => &self.sky_a,
            _ => &self.gray,
        }
    }
}

pub fn indigo_scale() -> ColorScale {
    UiColorPalettesData::default_light().indigo.to_color_scale()
}

pub fn gray_scale() -> ColorScale {
    UiColorPalettesData::default_light().gray.to_color_scale()
}

#[derive(Debug, Clone, Copy, PartialEq)]
pub struct ThemeColors {
    pub accent: ColorScale,
    pub gray: ColorScale,
    pub background: Color,
    pub panel_solid: Color,
    pub panel_translucent: Color,
    pub surface: Color,
    pub overlay: Color,
}